SSH keypair for passwordless login to travis. To generate keypair use Git Bash or a commandline tool. 

ssh-keygen â€“t rsa 

When prompted for a passphrase, make sure to leave it blank so that Travis can automatically login. 

ssh-copy-id  

or manually add the public key to ~/.ssh/authorized_keys for both your git and apps users. 

Next you'll need to encrypt the private key via the Travis CLI.
Note that a Linux/OSX environment is necessary for this function to work properly, so some sort of emulation layer is necessary for Windows. 
Either way, install the Travis CLI. Once you've done that, run 

travis encrypt-file id_rsa 

I would recommend running this command inside your repository and using the --add flag to automatically add the correct commands to .travis.yml. 
Check this id_rsa.enc file into Git (I recommend putting under a .travis directory), but do not add the unencrypted id_rsa file; however, 
you should add the id_rsa.pub file just in case. This does not need to be encrypted. 

Assuming you already have your Git repository cloned onto the remote server, the next step is to configure it to allow pushes.
Run git config --local receive.denyCurrentBranch updateInstead to allow Git to accept pushes to a remote with a clean working tree. 
Once you've done that, make sure that the user and the group can access and modify the repository folder's contents (chown apps:deploy -R my-repo; chmod g+rw -R my-repo). 
You are now ready to start configuring Travis! 

The main configuration file that Travis uses is .travis.yml. The commands and configs you'll want to change depend on your language, 
so just take a look at the official Travis guide for that. The only things you'll need to worry about are the before_install and after_success hooks. 
If you encrypted the SSH private key correctly, you should have a command in the before_install section containing some OpenSSL stuff. If you don't, try re-encrypting the file. 
The after_success hook should contain the scripts you want to execute after your tests succeed. 
I named my script deploy.sh and put it in the .travis folder that I previously created during the encryption step. 

Once you're done with the deploy script, push it to your repository and enable Travis integration for it. 
The next step is to add environment variables to Travis to keep your IP, SSH port, and deploy directory secret. 
In the Travis menu, select your repository, click "More options", and click "Settings". Scroll down until you see the list of environment variables. 
There should be some already there that were added by the Travis CLI in the form encrypted_[hex string]_iv/key. 
Leave those alone. Add IP, PORT, and DEPLOY_DIR variables with their corresponding values. For full security, do not display these values in the build log. 
Once you've finished that, you're done! 